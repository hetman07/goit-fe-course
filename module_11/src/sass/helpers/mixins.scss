@mixin font-settings($size, $height) {
    font-size: $size;
    line-height: $height;
}

@mixin pseudo($display: inline-block, $content: ''){
    display: $display;
    content: $content;
}

// @mixin bg-image($path: '', $size: cover, $repeat: no-repeat, $pos: center){
//     background-image: url($path);
//     background-size: $size;
//     background-repeat: $repeat;
//     background-position: $pos;
// }

@mixin bg-image($bg-type: 'bg-short'){   
    background-repeat: no-repeat;
    background-position: center;
    @if $bg-type== 'bg-full' {
        background-size: cover;
        background-image: url($path);
    } @else if $bg-type== 'bg-cont' {
        background-size: contain;
    }
}

@mixin center-flex($type: '&&&') {
    display: flex;
    @if $type== 'all' { 
        justify-content: space-between;  
        align-items: center;
        flex-wrap: wrap;
    } @else if $type== 'short'{
        justify-content: space-between;
        flex-wrap: wrap;
    } @else if $type== 'colm'{
        flex-direction: column;
        align-items: center;
        flex-wrap: wrap;
    } @else if $type== 'cntr-items'{
        align-items: center;
    } @else if $type== 'all-cntr'{
        justify-content: center;
        align-items: center;
    } 
}


@mixin generate-pseudo-icons($baseclass, $list, $path, $ext){
    @each $icon in $list {
        .#{$baseclass}#{$icon}::before {
            background-image: url(#{$path}#{$icon}.#{$ext});

        @media (min-resolution: 192dpi), (min-resolution: 2dppx){
            background-image: url(#{$path}#{$icon}@2x.#{$ext});
        }
        }
    }
}